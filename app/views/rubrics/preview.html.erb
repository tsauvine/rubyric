<!-- reviews/edit.html.erb -->

<script>
  var modified = false;

  /**
   * Adds a phrase to a feedback textarea.
   */
  function addFeedback(source, type) {
    // Raise the 'modified' flag to warn about unsaved changes
    modified = true;

    // Collect text. (There are multiple child elements if <br />s are present.)
    sourceElement = $(source);
    text = $A(sourceElement.childNodes).collect( function(node) {
      return (node.nodeType == 3 ? node.nodeValue.strip() : '\n');
    }).join('');

    // Select target text area
    switch (type) {
      case "Good":
        targetElement = $("feedback_good")
        caption = $("positiveCaption")
        color = "#a0ffa0"
        break;

      case "Bad":
        targetElement = $("feedback_bad")
        caption = $("negativeCaption")
        color = "#ffa0a0"
        break;

      case "Neutral":
        targetElement = $("feedback_neutral")
        caption = $("commentsCaption")
        color = "#c0c0ff"
        break;
    }

    if (targetElement) {
      targetElement.value += text + "\n";
    }

    // Flash the caption and hilight the phrase
    new Effect.Highlight(caption, {startcolor: color, endcolor: "#f8f8f8", duration: .6, queue: "end"});
    sourceElement.addClassName("bold");

    // Scroll down
    targetElement.scrollTop = targetElement.scrollHeight

    return false;
  }

  /**
   * Selects a grading option.
   */
  function setGrade(item, grade, grading_option) {
    modified = true;

    // De-hilight the previous selection
    for (i = 0; ; i++) {
      element = $("grade" + item + "_" + i);
      if (!element) {
        break
      }

      element.removeClassName("selected")
    }

    //Hilight the new selection
    element = $("grade" + item + "_" + grade)
    element.addClassName("selected")

    // Update the hidden field
    hidden_field = $("item_grades_" + item)
    hidden_field.value = grading_option
  }

</script>

<% form_for @feedback, :url => {:controller => 'rubric', :action => 'preview'}, :html => {:class => "feedback-editor"} do |f| %>
  <%= hidden_field_tag :section, @section.id %>

  <h1>Preview</h1>

  <!-- Menu -->
  <%= render :partial => 'previewmenu' %>

  <div class="flash flashWarning">
    This is a preview.
  </div>

  <% @section.items.each do |item| %>

    <!-- Heading -->
    <h3 onClick="$('phrases<%= item.id %>').toggle()" title="Click to hide/unhide phrases"><%= item.name.blank? ? '-&nbsp;' : h(item.name) %></h3>

    <!-- Grading options -->
    <ul class="grading-options">
      <%
      selected_grading_option = nil
      i = 0
      item.item_grading_options.each do |grading_option|
        if (@feedback.item_grades.include?(grading_option))
          selected_grading_option = grading_option.id
        end
      %>
        <li id="grade<%= item.id %>_<%= i %>" onClick='setGrade("<%= item.id %>", "<%= i %>", "<%= grading_option.id %>");' <%= @feedback.item_grades.include?(grading_option) ? "class='selected'" : '' %>><%= h grading_option.text %></li>
      <% i += 1; end %>
    </ul>
    <%= hidden_field_tag "item_grades[#{item.id}]", selected_grading_option %>

    <div class="clear"></div>

    <!-- Phrases -->
    <table id="phrases<%= item.id %>" class="phrases">
      <% item.phrases.each do |phrase|%>
          <tr><td id="cell<%= phrase.id %>" class="<%= phrase.feedbacktype %>" onClick='addFeedback("cell<%= phrase.id %>", "<%= phrase.feedbacktype %>")'>
            <%= h(phrase.content).gsub(/\n|\r/, '<br />') %>
          </td></tr>
      <% end %>
    </table>
  <% end # items
  %>

  <!-- Hide / Show all -->
  <p>
    <a href="#" onClick="$$('.phrases').each(function(e){e.hide()});return false;">Hide phrases</a>
    <a href="#" onClick="$$('.phrases').each(function(e){e.show()});return false;">Show phrases</a>
  </p>

  <!-- Section grading options -->
  <p class="grade" style="float: left">
    Grade:
    <%= f.select("section_grading_option_id", @section.section_grading_options.collect {|g| [ g.text, g.id ] }, { :include_blank => true }, {:onchange => 'modified=true'}) %>
  </p>

  <div class="clear"></div>

  <div id="textareas">
    <p id="positiveCaption">
      <%= @exercise.positive_caption %><br />
      <%= f.text_area :good, { :rows => 11 } %>
    </p>

    <p id="negativeCaption">
      <%= @exercise.negative_caption %><br />
      <%= f.text_area :bad, { :rows => 11 } %>
    </p>

    <p id="commentsCaption">
      <%= @exercise.neutral_caption %><br />
      <%= f.text_area :neutral, { :rows => 11 } %>
    </p>
  </div><!-- /textareas -->

<% end # form
%>

<p><%= link_to 'Back to editor', {:action => 'edit', :id => params[:id]} %></p>

